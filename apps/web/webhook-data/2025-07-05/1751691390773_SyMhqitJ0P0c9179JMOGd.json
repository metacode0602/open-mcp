{
  "event_type": "repo_updated",
  "timestamp": "2025-07-05T04:56:27.736Z",
  "data": {
    "id": "SyMhqitJ0P0c9179JMOGd",
    "full_name": "comfyanonymous/ComfyUI",
    "name": "ComfyUI",
    "owner": "comfyanonymous",
    "owner_id": 121283862,
    "description": "The most powerful and modular diffusion model GUI, api and backend with a graph/nodes interface.",
    "description_zh": "最强大且模块化的扩散模型GUI、API和后端，具有图形/节点界面。",
    "homepage": "https://www.comfy.org/",
    "stars": 81565,
    "forks": 9033,
    "contributor_count": 223,
    "mentionable_users_count": 223,
    "watchers_count": 564,
    "pull_requests_count": 1780,
    "releases_count": 65,
    "commit_count": 3636,
    "topics": [
      "stable-diffusion",
      "pytorch",
      "ai",
      "python"
    ],
    "languages": [
      {
        "name": "Python"
      },
      {
        "name": "Jupyter Notebook"
      },
      {
        "name": "Batchfile"
      },
      {
        "name": "Mako"
      }
    ],
    "license_spdx_id": "GPL-3.0",
    "default_branch": "master",
    "created_at": "2023-01-17T03:15:56.000Z",
    "pushed_at": "2025-07-04T21:27:05.000Z",
    "last_commit": "2025-07-04T08:49:11.000Z",
    "added_at": "2025-07-04T11:04:21.601Z",
    "archived": false,
    "icon_url": "https://zenly.oss-cn-hangzhou.aliyuncs.com/mcp/repos/comfyanonymous/ComfyUI/icon/1751627080837.png",
    "open_graph_image_url": "https://repository-images.githubusercontent.com/589831718/8fbc13a5-105f-49a2-beaf-0a81203b2d9f",
    "open_graph_image_oss_url": "https://zenly.oss-cn-hangzhou.aliyuncs.com/mcp/repos/comfyanonymous/ComfyUI/og-image/1751627274959.png",
    "uses_custom_open_graph_image": true,
    "readme_content": "<div align=\"center\">\n\n# ComfyUI\n**The most powerful and modular visual AI engine and application.**\n\n\n[![Website][website-shield]][website-url]\n[![Dynamic JSON Badge][discord-shield]][discord-url]\n[![Twitter][twitter-shield]][twitter-url]\n[![Matrix][matrix-shield]][matrix-url]\n<br>\n[![][github-release-shield]][github-release-link]\n[![][github-release-date-shield]][github-release-link]\n[![][github-downloads-shield]][github-downloads-link]\n[![][github-downloads-latest-shield]][github-downloads-link]\n\n[matrix-shield]: https://img.shields.io/badge/Matrix-000000?style=flat&logo=matrix&logoColor=white\n[matrix-url]: https://app.element.io/#/room/%23comfyui_space%3Amatrix.org\n[website-shield]: https://img.shields.io/badge/ComfyOrg-4285F4?style=flat\n[website-url]: https://www.comfy.org/\n<!-- Workaround to display total user from https://github.com/badges/shields/issues/4500#issuecomment-2060079995 -->\n[discord-shield]: https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Fcomfyorg%3Fwith_counts%3Dtrue&query=%24.approximate_member_count&logo=discord&logoColor=white&label=Discord&color=green&suffix=%20total\n[discord-url]: https://www.comfy.org/discord\n[twitter-shield]: https://img.shields.io/twitter/follow/ComfyUI\n[twitter-url]: https://x.com/ComfyUI\n\n[github-release-shield]: https://img.shields.io/github/v/release/comfyanonymous/ComfyUI?style=flat&sort=semver\n[github-release-link]: https://github.com/comfyanonymous/ComfyUI/releases\n[github-release-date-shield]: https://img.shields.io/github/release-date/comfyanonymous/ComfyUI?style=flat\n[github-downloads-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/total?style=flat\n[github-downloads-latest-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/latest/total?style=flat&label=downloads%40latest\n[github-downloads-link]: https://github.com/comfyanonymous/ComfyUI/releases\n\n![ComfyUI Screenshot](https://zenly.oss-cn-hangzhou.aliyuncs.com/mcp/repos/comfyanonymous/ComfyUI/readme-images/1751639862493.png)\n</div>\n\nComfyUI lets you design and execute advanced stable diffusion pipelines using a graph/nodes/flowchart based interface. Available on Windows, Linux, and macOS.\n\n## Get Started\n\n#### [Desktop Application](https://www.comfy.org/download)\n- The easiest way to get started. \n- Available on Windows & macOS.\n\n#### [Windows Portable Package](#installing)\n- Get the latest commits and completely portable.\n- Available on Windows.\n\n#### [Manual Install](#manual-install-windows-linux)\nSupports all operating systems and GPU types (NVIDIA, AMD, Intel, Apple Silicon, Ascend).\n\n## [Examples](https://comfyanonymous.github.io/ComfyUI_examples/)\nSee what ComfyUI can do with the [example workflows](https://comfyanonymous.github.io/ComfyUI_examples/).\n\n## Features\n- Nodes/graph/flowchart interface to experiment and create complex Stable Diffusion workflows without needing to code anything.\n- Image Models\n   - SD1.x, SD2.x,\n   - [SDXL](https://comfyanonymous.github.io/ComfyUI_examples/sdxl/), [SDXL Turbo](https://comfyanonymous.github.io/ComfyUI_examples/sdturbo/)\n   - [Stable Cascade](https://comfyanonymous.github.io/ComfyUI_examples/stable_cascade/)\n   - [SD3 and SD3.5](https://comfyanonymous.github.io/ComfyUI_examples/sd3/)\n   - Pixart Alpha and Sigma\n   - [AuraFlow](https://comfyanonymous.github.io/ComfyUI_examples/aura_flow/)\n   - [HunyuanDiT](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_dit/)\n   - [Flux](https://comfyanonymous.github.io/ComfyUI_examples/flux/)\n   - [Lumina Image 2.0](https://comfyanonymous.github.io/ComfyUI_examples/lumina2/)\n   - [HiDream](https://comfyanonymous.github.io/ComfyUI_examples/hidream/)\n   - [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n- Image Editing Models\n   - [Omnigen 2](https://comfyanonymous.github.io/ComfyUI_examples/omnigen/)\n   - [Flux Kontext](https://comfyanonymous.github.io/ComfyUI_examples/flux/#flux-kontext-image-editing-model)\n- Video Models\n   - [Stable Video Diffusion](https://comfyanonymous.github.io/ComfyUI_examples/video/)\n   - [Mochi](https://comfyanonymous.github.io/ComfyUI_examples/mochi/)\n   - [LTX-Video](https://comfyanonymous.github.io/ComfyUI_examples/ltxv/)\n   - [Hunyuan Video](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_video/)\n   - [Nvidia Cosmos](https://comfyanonymous.github.io/ComfyUI_examples/cosmos/) and [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n   - [Wan 2.1](https://comfyanonymous.github.io/ComfyUI_examples/wan/)\n- Audio Models\n   - [Stable Audio](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n   - [ACE Step](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n- 3D Models\n   - [Hunyuan3D 2.0](https://docs.comfy.org/tutorials/3d/hunyuan3D-2)\n- Asynchronous Queue system\n- Many optimizations: Only re-executes the parts of the workflow that changes between executions.\n- Smart memory management: can automatically run models on GPUs with as low as 1GB vram.\n- Works even if you don't have a GPU with: ```--cpu``` (slow)\n- Can load ckpt, safetensors and diffusers models/checkpoints. Standalone VAEs and CLIP models.\n- Safe loading of ckpt, pt, pth, etc.. files.\n- Embeddings/Textual inversion\n- [Loras (regular, locon and loha)](https://comfyanonymous.github.io/ComfyUI_examples/lora/)\n- [Hypernetworks](https://comfyanonymous.github.io/ComfyUI_examples/hypernetworks/)\n- Loading full workflows (with seeds) from generated PNG, WebP and FLAC files.\n- Saving/Loading workflows as Json files.\n- Nodes interface can be used to create complex workflows like one for [Hires fix](https://comfyanonymous.github.io/ComfyUI_examples/2_pass_txt2img/) or much more advanced ones.\n- [Area Composition](https://comfyanonymous.github.io/ComfyUI_examples/area_composition/)\n- [Inpainting](https://comfyanonymous.github.io/ComfyUI_examples/inpaint/) with both regular and inpainting models.\n- [ControlNet and T2I-Adapter](https://comfyanonymous.github.io/ComfyUI_examples/controlnet/)\n- [Upscale Models (ESRGAN, ESRGAN variants, SwinIR, Swin2SR, etc...)](https://comfyanonymous.github.io/ComfyUI_examples/upscale_models/)\n- [unCLIP Models](https://comfyanonymous.github.io/ComfyUI_examples/unclip/)\n- [GLIGEN](https://comfyanonymous.github.io/ComfyUI_examples/gligen/)\n- [Model Merging](https://comfyanonymous.github.io/ComfyUI_examples/model_merging/)\n- [LCM models and Loras](https://comfyanonymous.github.io/ComfyUI_examples/lcm/)\n- Latent previews with [TAESD](#how-to-show-high-quality-previews)\n- Works fully offline: core will never download anything unless you want to.\n- Optional API nodes to use paid models from external providers through the online [Comfy API](https://docs.comfy.org/tutorials/api-nodes/overview).\n- [Config file](https://github.com/comfyanonymous/ComfyUI/blob/main/extra_model_paths.yaml.example) to set the search paths for models.\n\nWorkflow examples can be found on the [Examples page](https://comfyanonymous.github.io/ComfyUI_examples/)\n\n## Release Process\n\nComfyUI follows a weekly release cycle every Friday, with three interconnected repositories:\n\n1. **[ComfyUI Core](https://github.com/comfyanonymous/ComfyUI)**\n   - Releases a new stable version (e.g., v0.7.0)\n   - Serves as the foundation for the desktop release\n\n2. **[ComfyUI Desktop](https://github.com/Comfy-Org/desktop)**\n   - Builds a new release using the latest stable core version\n\n3. **[ComfyUI Frontend](https://github.com/Comfy-Org/ComfyUI_frontend)**\n   - Weekly frontend updates are merged into the core repository\n   - Features are frozen for the upcoming core release\n   - Development continues for the next release cycle\n\n## Shortcuts\n\n| Keybind                            | Explanation                                                                                                        |\n|------------------------------------|--------------------------------------------------------------------------------------------------------------------|\n| `Ctrl` + `Enter`                      | Queue up current graph for generation                                                                              |\n| `Ctrl` + `Shift` + `Enter`              | Queue up current graph as first for generation                                                                     |\n| `Ctrl` + `Alt` + `Enter`                | Cancel current generation                                                                                          |\n| `Ctrl` + `Z`/`Ctrl` + `Y`                 | Undo/Redo                                                                                                          |\n| `Ctrl` + `S`                          | Save workflow                                                                                                      |\n| `Ctrl` + `O`                          | Load workflow                                                                                                      |\n| `Ctrl` + `A`                          | Select all nodes                                                                                                   |\n| `Alt `+ `C`                           | Collapse/uncollapse selected nodes                                                                                 |\n| `Ctrl` + `M`                          | Mute/unmute selected nodes                                                                                         |\n| `Ctrl` + `B`                           | Bypass selected nodes (acts like the node was removed from the graph and the wires reconnected through)            |\n| `Delete`/`Backspace`                   | Delete selected nodes                                                                                              |\n| `Ctrl` + `Backspace`                   | Delete the current graph                                                                                           |\n| `Space`                              | Move the canvas around when held and moving the cursor                                                             |\n| `Ctrl`/`Shift` + `Click`                 | Add clicked node to selection                                                                                      |\n| `Ctrl` + `C`/`Ctrl` + `V`                  | Copy and paste selected nodes (without maintaining connections to outputs of unselected nodes)                     |\n| `Ctrl` + `C`/`Ctrl` + `Shift` + `V`          | Copy and paste selected nodes (maintaining connections from outputs of unselected nodes to inputs of pasted nodes) |\n| `Shift` + `Drag`                       | Move multiple selected nodes at the same time                                                                      |\n| `Ctrl` + `D`                           | Load default graph                                                                                                 |\n| `Alt` + `+`                          | Canvas Zoom in                                                                                                     |\n| `Alt` + `-`                          | Canvas Zoom out                                                                                                    |\n| `Ctrl` + `Shift` + LMB + Vertical drag | Canvas Zoom in/out                                                                                                 |\n| `P`                                  | Pin/Unpin selected nodes                                                                                           |\n| `Ctrl` + `G`                           | Group selected nodes                                                                                               |\n| `Q`                                 | Toggle visibility of the queue                                                                                     |\n| `H`                                  | Toggle visibility of history                                                                                       |\n| `R`                                  | Refresh graph                                                                                                      |\n| `F`                                  | Show/Hide menu                                                                                                      |\n| `.`                                  | Fit view to selection (Whole graph when nothing is selected)                                                        |\n| Double-Click LMB                   | Open node quick search palette                                                                                     |\n| `Shift` + Drag                       | Move multiple wires at once                                                                                        |\n| `Ctrl` + `Alt` + LMB                   | Disconnect all wires from clicked slot                                                                             |\n\n`Ctrl` can also be replaced with `Cmd` instead for macOS users\n\n# Installing\n\n## Windows Portable\n\nThere is a portable standalone build for Windows that should work for running on Nvidia GPUs or for running on your CPU only on the [releases page](https://github.com/comfyanonymous/ComfyUI/releases).\n\n### [Direct link to download](https://github.com/comfyanonymous/ComfyUI/releases/latest/download/ComfyUI_windows_portable_nvidia.7z)\n\nSimply download, extract with [7-Zip](https://7-zip.org) and run. Make sure you put your Stable Diffusion checkpoints/models (the huge ckpt/safetensors files) in: ComfyUI\\models\\checkpoints\n\nIf you have trouble extracting it, right click the file -> properties -> unblock\n\n#### How do I share models between another UI and ComfyUI?\n\nSee the [Config file](https://github.com/comfyanonymous/ComfyUI/blob/main/extra_model_paths.yaml.example) to set the search paths for models. In the standalone windows build you can find this file in the ComfyUI directory. Rename this file to extra_model_paths.yaml and edit it with your favorite text editor.\n\n## Jupyter Notebook\n\nTo run it on services like paperspace, kaggle or colab you can use my [Jupyter Notebook](https://github.com/comfyanonymous/ComfyUI/blob/main/notebooks/comfyui_colab.ipynb)\n\n\n## [comfy-cli](https://docs.comfy.org/comfy-cli/getting-started)\n\nYou can install and start ComfyUI using comfy-cli:\n```bash\npip install comfy-cli\ncomfy install\n```\n\n## Manual Install (Windows, Linux)\n\npython 3.13 is supported but using 3.12 is recommended because some custom nodes and their dependencies might not support it yet.\n\nGit clone this repo.\n\nPut your SD checkpoints (the huge ckpt/safetensors files) in: models/checkpoints\n\nPut your VAE in: models/vae\n\n\n### AMD GPUs (Linux only)\nAMD users can install rocm and pytorch with pip if you don't have it already installed, this is the command to install the stable version:\n\n```pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.3```\n\nThis is the command to install the nightly with ROCm 6.4 which might have some performance improvements:\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/rocm6.4```\n\n### Intel GPUs (Windows and Linux)\n\n(Option 1) Intel Arc GPU users can install native PyTorch with torch.xpu support using pip (currently available in PyTorch nightly builds). More information can be found [here](https://pytorch.org/docs/main/notes/get_start_xpu.html)\n  \n1. To install PyTorch nightly, use the following command:\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/xpu```\n\n2. Launch ComfyUI by running `python main.py`\n\n\n(Option 2) Alternatively, Intel GPUs supported by Intel Extension for PyTorch (IPEX) can leverage IPEX for improved performance.\n\n1. For Intel® Arc™ A-Series Graphics utilizing IPEX, create a conda environment and use the commands below:\n\n```\nconda install libuv\npip install torch==2.3.1.post0+cxx11.abi torchvision==0.18.1.post0+cxx11.abi torchaudio==2.3.1.post0+cxx11.abi intel-extension-for-pytorch==2.3.110.post0+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/us/ --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/\n```\n\nFor other supported Intel GPUs with IPEX, visit [Installation](https://intel.github.io/intel-extension-for-pytorch/index.html#installation?platform=gpu) for more information.\n\nAdditional discussion and help can be found [here](https://github.com/comfyanonymous/ComfyUI/discussions/476).\n\n### NVIDIA\n\nNvidia users should install stable pytorch using this command:\n\n```pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu128```\n\nThis is the command to install pytorch nightly instead which might have performance improvements.\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu129```\n\n#### Troubleshooting\n\nIf you get the \"Torch not compiled with CUDA enabled\" error, uninstall torch with:\n\n```pip uninstall torch```\n\nAnd install it again with the command above.\n\n### Dependencies\n\nInstall the dependencies by opening your terminal inside the ComfyUI folder and:\n\n```pip install -r requirements.txt```\n\nAfter this you should have everything installed and can proceed to running ComfyUI.\n\n### Others:\n\n#### Apple Mac silicon\n\nYou can install ComfyUI in Apple Mac silicon (M1 or M2) with any recent macOS version.\n\n1. Install pytorch nightly. For instructions, read the [Accelerated PyTorch training on Mac](https://developer.apple.com/metal/pytorch/) Apple Developer guide (make sure to install the latest pytorch nightly).\n1. Follow the [ComfyUI manual installation](#manual-install-windows-linux) instructions for Windows and Linux.\n1. Install the ComfyUI [dependencies](#dependencies). If you have another Stable Diffusion UI [you might be able to reuse the dependencies](#i-already-have-another-ui-for-stable-diffusion-installed-do-i-really-have-to-install-all-of-these-dependencies).\n1. Launch ComfyUI by running `python main.py`\n\n> **Note**: Remember to add your models, VAE, LoRAs etc. to the corresponding Comfy folders, as discussed in [ComfyUI manual installation](#manual-install-windows-linux).\n\n#### DirectML (AMD Cards on Windows)\n\nThis is very badly supported and is not recommended. There are some unofficial builds of pytorch ROCm on windows that exist that will give you a much better experience than this. This readme will be updated once official pytorch ROCm builds for windows come out.\n\n```pip install torch-directml``` Then you can launch ComfyUI with: ```python main.py --directml```\n\n#### Ascend NPUs\n\nFor models compatible with Ascend Extension for PyTorch (torch_npu). To get started, ensure your environment meets the prerequisites outlined on the [installation](https://ascend.github.io/docs/sources/ascend/quick_install.html) page. Here's a step-by-step guide tailored to your platform and installation method:\n\n1. Begin by installing the recommended or newer kernel version for Linux as specified in the Installation page of torch-npu, if necessary.\n2. Proceed with the installation of Ascend Basekit, which includes the driver, firmware, and CANN, following the instructions provided for your specific platform.\n3. Next, install the necessary packages for torch-npu by adhering to the platform-specific instructions on the [Installation](https://ascend.github.io/docs/sources/pytorch/install.html#pytorch) page.\n4. Finally, adhere to the [ComfyUI manual installation](#manual-install-windows-linux) guide for Linux. Once all components are installed, you can run ComfyUI as described earlier.\n\n#### Cambricon MLUs\n\nFor models compatible with Cambricon Extension for PyTorch (torch_mlu). Here's a step-by-step guide tailored to your platform and installation method:\n\n1. Install the Cambricon CNToolkit by adhering to the platform-specific instructions on the [Installation](https://www.cambricon.com/docs/sdk_1.15.0/cntoolkit_3.7.2/cntoolkit_install_3.7.2/index.html)\n2. Next, install the PyTorch(torch_mlu) following the instructions on the [Installation](https://www.cambricon.com/docs/sdk_1.15.0/cambricon_pytorch_1.17.0/user_guide_1.9/index.html)\n3. Launch ComfyUI by running `python main.py`\n\n# Running\n\n```python main.py```\n\n### For AMD cards not officially supported by ROCm\n\nTry running it with this command if you have issues:\n\nFor 6700, 6600 and maybe other RDNA2 or older: ```HSA_OVERRIDE_GFX_VERSION=10.3.0 python main.py```\n\nFor AMD 7600 and maybe other RDNA3 cards: ```HSA_OVERRIDE_GFX_VERSION=11.0.0 python main.py```\n\n### AMD ROCm Tips\n\nYou can enable experimental memory efficient attention on recent pytorch in ComfyUI on some AMD GPUs using this command, it should already be enabled by default on RDNA3. If this improves speed for you on latest pytorch on your GPU please report it so that I can enable it by default.\n\n```TORCH_ROCM_AOTRITON_ENABLE_EXPERIMENTAL=1 python main.py --use-pytorch-cross-attention```\n\nYou can also try setting this env variable `PYTORCH_TUNABLEOP_ENABLED=1` which might speed things up at the cost of a very slow initial run.\n\n# Notes\n\nOnly parts of the graph that have an output with all the correct inputs will be executed.\n\nOnly parts of the graph that change from each execution to the next will be executed, if you submit the same graph twice only the first will be executed. If you change the last part of the graph only the part you changed and the part that depends on it will be executed.\n\nDragging a generated png on the webpage or loading one will give you the full workflow including seeds that were used to create it.\n\nYou can use () to change emphasis of a word or phrase like: (good code:1.2) or (bad code:0.8). The default emphasis for () is 1.1. To use () characters in your actual prompt escape them like \\\\( or \\\\).\n\nYou can use {day|night}, for wildcard/dynamic prompts. With this syntax \"{wild|card|test}\" will be randomly replaced by either \"wild\", \"card\" or \"test\" by the frontend every time you queue the prompt. To use {} characters in your actual prompt escape them like: \\\\{ or \\\\}.\n\nDynamic prompts also support C-style comments, like `// comment` or `/* comment */`.\n\nTo use a textual inversion concepts/embeddings in a text prompt put them in the models/embeddings directory and use them in the CLIPTextEncode node like this (you can omit the .pt extension):\n\n```embedding:embedding_filename.pt```\n\n\n## How to show high-quality previews?\n\nUse ```--preview-method auto``` to enable previews.\n\nThe default installation includes a fast latent preview method that's low-resolution. To enable higher-quality previews with [TAESD](https://github.com/madebyollin/taesd), download the [taesd_decoder.pth, taesdxl_decoder.pth, taesd3_decoder.pth and taef1_decoder.pth](https://github.com/madebyollin/taesd/) and place them in the `models/vae_approx` folder. Once they're installed, restart ComfyUI and launch it with `--preview-method taesd` to enable high-quality previews.\n\n## How to use TLS/SSL?\nGenerate a self-signed certificate (not appropriate for shared/production use) and key by running the command: `openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj \"/C=XX/ST=StateName/L=CityName/O=CompanyName/OU=CompanySectionName/CN=CommonNameOrHostname\"`\n\nUse `--tls-keyfile key.pem --tls-certfile cert.pem` to enable TLS/SSL, the app will now be accessible with `https://...` instead of `http://...`.\n\n> Note: Windows users can use [alexisrolland/docker-openssl](https://github.com/alexisrolland/docker-openssl) or one of the [3rd party binary distributions](https://wiki.openssl.org/index.php/Binaries) to run the command example above. \n<br/><br/>If you use a container, note that the volume mount `-v` can be a relative path so `... -v \".\\:/openssl-certs\" ...` would create the key & cert files in the current directory of your command prompt or powershell terminal.\n\n## Support and dev channel\n\n[Discord](https://comfy.org/discord): Try the #help or #feedback channels.\n\n[Matrix space: #comfyui_space:matrix.org](https://app.element.io/#/room/%23comfyui_space%3Amatrix.org) (it's like discord but open source).\n\nSee also: [https://www.comfy.org/](https://www.comfy.org/)\n\n## Frontend Development\n\nAs of August 15, 2024, we have transitioned to a new frontend, which is now hosted in a separate repository: [ComfyUI Frontend](https://github.com/Comfy-Org/ComfyUI_frontend). This repository now hosts the compiled JS (from TS/Vue) under the `web/` directory.\n\n### Reporting Issues and Requesting Features\n\nFor any bugs, issues, or feature requests related to the frontend, please use the [ComfyUI Frontend repository](https://github.com/Comfy-Org/ComfyUI_frontend). This will help us manage and address frontend-specific concerns more efficiently.\n\n### Using the Latest Frontend\n\nThe new frontend is now the default for ComfyUI. However, please note:\n\n1. The frontend in the main ComfyUI repository is updated fortnightly.\n2. Daily releases are available in the separate frontend repository.\n\nTo use the most up-to-date frontend version:\n\n1. For the latest daily release, launch ComfyUI with this command line argument:\n\n   ```\n   --front-end-version Comfy-Org/ComfyUI_frontend@latest\n   ```\n\n2. For a specific version, replace `latest` with the desired version number:\n\n   ```\n   --front-end-version Comfy-Org/ComfyUI_frontend@1.2.2\n   ```\n\nThis approach allows you to easily switch between the stable fortnightly release and the cutting-edge daily updates, or even specific versions for testing purposes.\n\n### Accessing the Legacy Frontend\n\nIf you need to use the legacy frontend for any reason, you can access it using the following command line argument:\n\n```\n--front-end-version Comfy-Org/ComfyUI_legacy_frontend@latest\n```\n\nThis will use a snapshot of the legacy frontend preserved in the [ComfyUI Legacy Frontend repository](https://github.com/Comfy-Org/ComfyUI_legacy_frontend).\n\n# QA\n\n### Which GPU should I buy for this?\n\n[See this page for some recommendations](https://github.com/comfyanonymous/ComfyUI/wiki/Which-GPU-should-I-buy-for-ComfyUI)\n",
    "readme_content_zh": "<div align=\"center\">\n\n# ComfyUI\n**最强大且模块化的视觉AI引擎和应用程序。**\n\n\n[![网站][website-shield]][website-url]\n[![动态JSON徽章][discord-shield]][discord-url]\n[![推特][twitter-shield]][twitter-url]\n[![矩阵][matrix-shield]][matrix-url]\n<br>\n[![][github-release-shield]][github-release-link]\n[![][github-release-date-shield]][github-release-link]\n[![][github-downloads-shield]][github-downloads-link]\n[![][github-downloads-latest-shield]][github-downloads-link]\n\n[matrix-shield]: https://img.shields.io/badge/Matrix-000000?style=flat&logo=matrix&logoColor=white\n[matrix-url]: https://app.element.io/#/room/%23comfyui_space%3Amatrix.org\n[website-shield]: https://img.shields.io/badge/ComfyOrg-4285F4?style=flat\n[website-url]: https://www.comfy.org/\n<!-- Workaround to display total user from https://github.com/badges/shields/issues/4500#issuecomment-2060079995 -->\n[discord-shield]: https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Fcomfyorg%3Fwith_counts%3Dtrue&query=%24.approximate_member_count&logo=discord&logoColor=white&label=Discord&color=green&suffix=%20total\n[discord-url]: https://www.comfy.org/discord\n[twitter-shield]: https://img.shields.io/twitter/follow/ComfyUI\n[twitter-url]: https://x.com/ComfyUI\n\n[github-release-shield]: https://img.shields.io/github/v/release/comfyanonymous/ComfyUI?style=flat&sort=semver\n[github-release-link]: https://github.com/comfyanonymous/ComfyUI/releases\n[github-release-date-shield]: https://img.shields.io/github/release-date/comfyanonymous/ComfyUI?style=flat\n[github-downloads-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/total?style=flat\n[github-downloads-latest-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/latest/total?style=flat&label=downloads%40latest\n[github-downloads-link]: https://github.com/comfyanonymous/ComfyUI/releases\n\n![ComfyUI 截图](https://zenly.oss-cn-hangzhou.aliyuncs.com/mcp/repos/comfyanonymous/ComfyUI/readme-images/1751639862493.png)\n</div>\n\nComfyUI 让您能够使用基于图形/节点/流程图的界面设计和执行高级稳定扩散管道。可在 Windows、Linux 和 macOS 上使用。\n\n## 入门指南\n\n#### [桌面应用程序](https://www.comfy.org/download)\n- 最简单的方式开始使用。\n- 可在 Windows & macOS 上使用。\n\n#### [Windows 可移植包](#installing)\n- 获取最新提交并完全可移植。\n- 可在 Windows 上使用。\n\n#### [手动安装](#manual-install-windows-linux)\n支持所有操作系统和 GPU 类型（NVIDIA、AMD、Intel、Apple Silicon、Ascend）。\n\n## [示例](https://comfyanonymous.github.io/ComfyUI_examples/)\n查看 ComfyUI 能做什么，以及 [示例工作流](https://comfyanonymous.github.io/ComfyUI_examples/)。\n\n## 功能\n- 节点/图形/流程图界面，无需编写任何代码即可实验和创建复杂的 Stable Diffusion 工作流。\n- 图像模型\n   - SD1.x, SD2.x,\n   - [SDXL](https://comfyanonymous.github.io/ComfyUI_examples/sdxl/), [SDXL Turbo](https://comfyanonymous.github.io/ComfyUI_examples/sdturbo/)\n   - [稳定级联](https://comfyanonymous.github.io/ComfyUI_examples/stable_cascade/)\n   - [SD3 和 SD3.5](https://comfyanonymous.github.io/ComfyUI_examples/sd3/)\n   - Pixart Alpha 和 Sigma\n   - [AuraFlow](https://comfyanonymous.github.io/ComfyUI_examples/aura_flow/)\n   - [HunyuanDiT](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_dit/)\n   - [Flux](https://comfyanonymous.github.io/ComfyUI_examples/flux/)\n   - [Lumina Image 2.0](https://comfyanonymous.github.io/ComfyUI_examples/lumina2/)\n   - [HiDream](https://comfyanonymous.github.io/ComfyUI_examples/hidream/)\n   - [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n- 图像编辑模型\n   - [Omnigen 2](https://comfyanonymous.github.io/ComfyUI_examples/omnigen/)\n   - [Flux Kontext](https://comfyanonymous.github.io/ComfyUI_examples/flux/#flux-kontext-image-editing-model)\n- 视频模型\n   - [稳定视频扩散](https://comfyanonymous.github.io/ComfyUI_examples/video/)\n   - [Mochi](https://comfyanonymous.github.io/ComfyUI_examples/mochi/)\n   - [LTX-Video](https://comfyanonymous.github.io/ComfyUI_examples/ltxv/)\n   - [Hunyuan 视频](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_video/)\n   - [Nvidia Cosmos](https://comfyanonymous.github.io/ComfyUI_examples/cosmos/) 和 [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n   - [Wan 2.1](https://comfyanonymous.github.io/ComfyUI_examples/wan/)\n- 音频模型\n   - [稳定音频](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n   - [ACE Step](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n- 3D 模型\n   - [Hunyuan3D 2.0](https://docs.comfy.org/tutorials/3d/hunyuan3D-2)\n- 异步队列系统\n- 许多优化：仅重新执行工作流中在执行之间发生变化的部分。\n- 智能内存管理：可以自动在显存低至 1GB 的 GPU 上运行模型。\n- 即使没有支持 GPU 的用户也可以工作：```--cpu```（速度慢）\n- 可以加载 ckpt、safetensors 和 diffusers 模型/检查点。独立的 VAE 和 CLIP 模型。\n- 安全加载 ckpt、pt、pth 等文件。\n- 嵌入/文本反转\n- [Loras (常规、locon 和 loha)](https://comfyanonymous.github.io/ComfyUI_examples/lora/)\n- [超网络](https://comfyanonymous.github.io/ComfyUI_examples/hypernetworks/)\n- 从生成的 PNG、WebP 和 FLAC 文件中加载完整工作流（包括种子）。\n- 将工作流作为 Json 文件保存/加载。\n- 节点界面可用于创建复杂工作流，例如用于 [高分辨率修复](https://comfyanonymous.github.io/ComfyUI_examples/2_pass_txt2img/) 或更高级的工作流。\n- [区域合成](https://comfyanonymous.github.io/ComfyUI_examples/area_composition/)\n- [修复](https://comfyanonymous.github.io/ComfyUI_examples/inpaint/)，支持常规和修复模型。\n- [ControlNet 和 T2I-Adapter](https://comfyanonymous.github.io/ComfyUI_examples/controlnet/)\n- [提升模型 (ESRGAN、ESRGAN 变体、SwinIR、Swin2SR 等...)](https://comfyanonymous.github.io/ComfyUI_examples/upscale_models/)\n- [unCLIP 模型](https://comfyanonymous.github.io/ComfyUI_examples/unclip/)\n- [GLIGEN](https://comfyanonymous.github.io/ComfyUI_examples/gligen/)\n- [模型合并](https://comfyanonymous.github.io/ComfyUI_examples/model_merging/)\n- [LCM 模型和 Loras](https://comfyanonymous.github.io/ComfyUI_examples/lcm/)\n- 使用 [TAESD](#how-to-show-high-quality-previews) 的潜在预览。\n- 完全离线工作：核心永远不会下载任何内容，除非您希望这样做。\n- 可选 API 节点，通过在线 [Comfy API](https://docs.comfy.org/tutorials/api-nodes/overview) 使用来自外部提供者的付费模型。\n- [配置文件](https://github.com/comfyanonymous/ComfyUI/blob/main/extra_model_paths.yaml.example) 来设置模型搜索路径。\n\n工作流示例可以在 [示例页面](https://comfyanonymous.github.io/ComfyUI_examples/) 找到\n\n## 发布流程\n\nComfyUI 每周五遵循每周发布周期，涉及三个相互关联的存储库：\n\n1. **[ComfyUI 核心](https://github.com/comfyanonymous/ComfyUI)**\n   - 发布新的稳定版本（例如，v0.7.0）\n   - 作为桌面发布的基石\n\n2. **[ComfyUI 桌面版](https://github.com/Comfy-Org/desktop)**\n   - 使用最新的稳定核心版本构建新发布\n\n3. **[ComfyUI 前端](https://github.com/Comfy-Org/ComfyUI_frontend)**\n   - 每周前端更新会合并到核心存储库\n   - 即将到来的核心发布的功能冻结\n   - 继续为下一个发布周期开发\n\n## 快捷键\n\n| 快捷键                            | 说明                                                                                                        |\n|------------------------------------|--------------------------------------------------------------------------------------------------------------------|\n| `Ctrl` + `Enter`                      | 将当前图形加入生成队列                                                                              |\n| `Ctrl` + `Shift` + `Enter`              | 将当前图形作为第一个加入生成队列                                                                     |\n| `Ctrl` + `Alt` + `Enter`                | 取消当前生成                                                                                          |\n| `Ctrl` + `Z`/`Ctrl` + `Y`                 | 撤销/重做                                                                                                          |\n| `Ctrl` + `S`                          | 保存工作流                                                                                                      |\n| `Ctrl` + `O`                          | 加载工作流                                                                                                      |\n| `Ctrl` + `A`                          | 选择所有节点                                                                                                   |\n| `Alt `+ `C`                           | 折叠/展开选定的节点                                                                                 |\n| `Ctrl` + `M`                          | 静音/取消静音选定的节点                                                                                         |\n| `Ctrl` + `B`                           | 跳过选定的节点（类似于从图形中移除节点并通过重新连接线路）            |\n| `Delete`/`Backspace`                   | 删除选定的节点                                                                                              |\n| `Ctrl` + `Backspace`                   | 删除当前图形                                                                                           |\n| `Space`                              | 按住时移动画布，同时移动光标                                                             |\n| `Ctrl`/`Shift` + `Click`                 | 将点击的节点添加到选择中                                                                                      |\n| `Ctrl` + `C`/`Ctrl` + `V`                  | 复制和粘贴选定的节点（不维护与未选择节点输出的连接）                     |\n| `Ctrl` + `C`/`Ctrl` + `Shift` + `V`          | 复制和粘贴选定的节点（维护与未选择节点输出的连接到粘贴节点的输入） |\n| `Shift` + `Drag`                       | 同时移动多个选定的节点                                                                      |\n| `Ctrl` + `D`                           | 加载默认图形                                                                                                 |\n| `Alt` + `+`                          | 画布放大                                                                                                     |\n| `Alt` + `-`                          | 画布缩小                                                                                                    |\n| `Ctrl` + `Shift` + LMB + 垂直拖动 | 画布放大/缩小                                                                                                 |\n| `P`                                  | 固定/取消固定选定的节点                                                                                           |\n| `Ctrl` + `G`                           | 组合选定的节点                                                                                               |\n| `Q`                                 | 切换队列的可见性                                                                                     |\n| `H`                                  | 切换历史记录的可见性                                                                                       |\n| `R`                                  | 刷新图形                                                                                                      |\n| `F`                                  | 显示/隐藏菜单                                                                                                      |\n| `.`                                  | 将视图调整为选择范围（未选择时为整个图形）                                                        |\n| 双击 LMB                   | 打开节点快速搜索调色板                                                                                     |\n| `Shift` + Drag                       | 同时移动多条线路                                                                                        |\n| `Ctrl` + `Alt` + LMB                   | 断开点击插槽的所有线路                                                                             |\n\n`Ctrl` 也可以替换为 macOS 用户的 `Cmd` \n\n# 安装\n\n## Windows 可移植版\n\n有一个适用于 Windows 的可移植独立构建，应该可以在 NVIDIA GPU 上运行，或者仅在 [发布页面](https://github.com/comfyanonymous/ComfyUI/releases) 上使用 CPU 仅运行。\n\n### [直接下载链接](https://github.com/comfyanonymous/ComfyUI/releases/latest/download/ComfyUI_windows_portable_nvidia.7z)\n\n只需下载、使用 [7-Zip](https://7-zip.org) 解压并运行。确保将您的 Stable Diffusion 检查点/模型（巨大的 ckpt/safetensors 文件）放在：ComfyUI\\models\\checkpoints\n\n如果您在解压时遇到问题，右键点击文件 -> 属性 -> 解锁\n\n#### 如何在另一个 UI 和 ComfyUI 之间共享模型？\n\n查看 [配置文件](https://github.com/comfyanonymous/ComfyUI/blob/main/extra_model_paths.yaml.example) 来设置模型搜索路径。在独立的 Windows 构建中，您可以在 ComfyUI 目录中找到此文件。将此文件重命名为 extra_model_paths.yaml 并使用您喜欢的文本编辑器编辑它。\n\n## Jupyter Notebook\n\n要在 paperspace、kaggle 或 colab 等服务上运行，您可以使用我的 [Jupyter Notebook](https://github.com/comfyanonymous/ComfyUI/blob/main/notebooks/comfyui_colab.ipynb)\n\n\n## [comfy-cli](https://docs.comfy.org/comfy-cli/getting-started)\n\n您可以使用 comfy-cli 安装和启动 ComfyUI：\n```bash\npip install comfy-cli\ncomfy install\n```\n\n## 手动安装 (Windows, Linux)\n\n支持所有操作系统和 GPU 类型（NVIDIA、AMD、Intel、Apple Silicon、Ascend）。\n\nGit 克隆此存储库。\n\n将您的 SD 检查点（巨大的 ckpt/safetensors 文件）放在：models/checkpoints\n\n将您的 VAE 放在：models/vae\n\n\n### AMD GPU (仅限 Linux)\nAMD 用户可以在尚未安装的情况下使用 pip 安装 rocm 和 pytorch，这是安装稳定版本的命令：\n\n```pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/rocm6.3```\n\n这是安装带有 ROCm 6.4 的夜间构建的命令，可能会有一些性能改进：\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/rocm6.4```\n\n### Intel GPU (Windows 和 Linux)\n\n(选项 1) Intel Arc GPU 用户可以使用 pip 安装原生 PyTorch，支持 torch.xpu（目前可在 PyTorch 夜间构建中找到）。更多信息可以在 [这里](https://pytorch.org/docs/main/notes/get_start_xpu.html) 找到\n\n1. 要安装 PyTorch 夜间构建，请使用以下命令：\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/xpu```\n\n2. 通过运行 `python main.py` 启动 ComfyUI\n\n\n(选项 2) 或者，Intel GPU 可由 Intel PyTorch 扩展 (IPEX) 支持，可以利用 IPEX 提高性能。\n\n1. 对于使用 IPEX 的 Intel® Arc™ A-Series 显卡，创建 conda 环境并使用以下命令：\n\n```\nconda install libuv\npip install torch==2.3.1.post0+cxx11.abi torchvision==0.18.1.post0+cxx11.abi torchaudio==2.3.1.post0+cxx11.abi intel-extension-for-pytorch==2.3.110.post0+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/us/ --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/cn/\n```\n\n对于其他支持 IPEX 的 Intel GPU，请访问 [安装](https://intel.github.io/intel-extension-for-pytorch/index.html#installation?platform=gpu) 获取更多信息。\n\n额外的讨论和帮助可以在 [这里](https://github.com/comfyanonymous/ComfyUI/discussions/476) 找到。\n\n### NVIDIA\n\nNVIDIA 用户应使用此命令安装稳定 pytorch：\n\n```pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu128```\n\n这是安装 pytorch 夜间构建的命令，可能会有性能改进。\n\n```pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu129```\n\n#### 故障排除\n\n如果您遇到 \"Torch not compiled with CUDA enabled\" 错误，请使用以下命令卸载 torch：\n\n```pip uninstall torch```\n\n然后使用上述命令重新安装它。\n\n### 依赖项\n\n在 ComfyUI 文件夹终端中打开您的终端并：\n\n```pip install -r requirements.txt```\n\n完成此操作后，您应该已经安装了所有内容，可以继续运行 ComfyUI。\n\n### 其他：\n\n#### Apple Mac silicon\n\n您可以在 Apple Mac silicon (M1 或 M2) 上安装 ComfyUI，任何较新的 macOS 版本都可以。\n\n1. 安装 pytorch 夜间构建。有关说明，请阅读 [Mac 上的加速 PyTorch 训练](https://developer.apple.com/metal/pytorch/) Apple 开发者指南（确保安装最新的 pytorch 夜间构建）。\n1. 按照 [ComfyUI 手动安装](#manual-install-windows-linux) 说明进行 Windows 和 Linux 安装。\n1. 安装 ComfyUI [依赖项](#dependencies)。如果您已经安装了另一个 Stable Diffusion UI [您可能可以重用这些依赖项](#i-already-have-another-ui-for-stable-diffusion-installed-do-i-really-have-to-install-all-of-these-dependencies)。\n1. 通过运行 `python main.py` 启动 ComfyUI\n\n> **注意**：请记住将您的模型、VAE、LoRAs 等添加到相应的 Comfy 文件夹，如 [ComfyUI 手动安装](#manual-install-windows-linux) 中所述。\n\n#### DirectML (Windows 上的 AMD 卡)\n\n这非常不受支持，不推荐使用。存在一些未经官方认证的 Windows pytorch ROCm 构建，它们将提供比这种方法更好的体验。此文档将在官方 Windows pytorch ROCm 构建出来后更新。\n\n```pip install torch-directml``` 然后您可以使用： ```python main.py --directml```\n\n#### Ascend NPUs\n\n对于与 Ascend PyTorch 扩展 (torch_npu) 兼容的模型。要开始使用，请确保您的环境满足 [安装](https://ascend.github.io/docs/sources/ascend/quick_install.html) 页面上概述的先决条件。以下是针对您的平台和安装方法量身定制的一步一步指南：\n\n1. 首先安装 torch-npu 推荐的或更新的内核版本，如果需要，请参考 torch-npu 的安装页面，如果需要。\n2. 接下来，按照为您的特定平台提供的说明安装 Ascend Basekit，它包括驱动程序、固件和 CANN。\n3. 然后，按照 [安装](https://ascend.github.io/docs/sources/pytorch/install.html#pytorch) 页面上为您的平台提供的说明安装必要的 torch-npu 包。\n4. 最后，遵循 [ComfyUI 手动安装](#manual-install-windows-linux) 指南进行 Linux。安装所有组件后，您可以按照前面的说明运行 ComfyUI。\n\n#### Cambricon MLUs\n\n对于与 Cambricon PyTorch 扩展 (torch_mlu) 兼容的模型。以下是针对您的平台和安装方法量身定制的一步一步指南：\n\n1. 按照 [安装](https://www.cambricon.com/docs/sdk_1.15.0/cntoolkit_3.7.2/cntoolkit_install_3.7.2/index.html) 上的平台特定说明安装 Cambricon CNToolkit\n2. 接下来，按照 [安装](https://www.cambricon.com/docs/sdk_1.15.0/cambricon_pytorch_1.17.0/user_guide_1.9/index.html) 上的说明安装 PyTorch(torch_mlu)\n3. 通过运行 `python main.py` 启动 ComfyUI\n\n# 运行\n\n```python main.py```\n\n### 对于未正式支持 ROCm 的 AMD 卡\n\n如果您遇到问题，请尝试使用此命令运行：\n\n对于 6700、6600 和可能其他 RDNA2 或更旧的： ```HSA_OVERRIDE_GFX_VERSION=10.3.0 python main.py```\n\n对于 AMD 7600 和可能其他 RDNA3 卡： ```HSA_OVERRIDE_GFX_VERSION=11.0.0 python main.py```\n\n### AMD ROCm 提示\n\n您可以使用此命令在部分 AMD GPU 上启用实验性内存高效注意力，它应该已经在 RDNA3 上默认启用。如果这提高了您最新 pytorch GPU 上的速度，请报告它，以便我可以默认启用它。\n\n```TORCH_ROCM_AOTRITON_ENABLE_EXPERIMENTAL=1 python main.py --use-pytorch-cross-attention```\n\n您还可以尝试设置此环境变量 `PYTORCH_TUNABLEOP_ENABLED=1`，这可能加快速度，但代价是初始运行非常慢。\n\n# 注意事项\n\n只有当图形中所有输出都具有所有正确输入时，才会执行。\n\n只有当图形从一次执行到下一次执行发生变化时，才会执行，如果您两次提交相同的图形，只有第一次会执行。如果您更改图形的最后一部分，只有您更改的部分及其依赖的部分会执行。\n\n将生成的 png 拖放到网页上或加载它将为您提供完整的工作流，包括用于创建它的种子。\n\n您可以使用 () 来更改单词或短语的强调程度，例如： (good code:1.2) 或 (bad code:0.8)。() 的默认强调程度为 1.1。要在实际提示中使用 () 字符，请像 \\\\( 或 \\\\) 这样转义它们。\n\n您可以使用 {day|night} 进行通配符/动态提示。使用此语法 \"{wild|card|test}\" 将会被前端每次排队提示时随机替换为 \"wild\"、\"card\" 或 \"test\"。要在实际提示中使用 {} 字符，请像：\\\\{ 或 \\\\} 这样转义它们。\n\n动态提示还支持 C 风格的注释，例如 `// 注释` 或 `/* 注释 */`。\n\n要在文本提示中使用文本反转概念/嵌入，请将它们放在 models/embeddings 目录中，并在 CLIPTextEncode 节点中使用它们，如下所示（可以省略 .pt 扩展名）：\n\n```embedding:embedding_filename.pt```\n\n\n## 如何显示高质量预览？\n\n使用 ```--preview-method auto``` 启用预览。\n\n默认安装包含一个快速潜在预览方法，分辨率为低。要启用更高质量的预览，请使用 [TAESD](https://github.com/madebyollin/taesd/)，下载 [taesd_decoder.pth, taesdxl_decoder.pth, taesd3_decoder.pth 和 taef1_decoder.pth](https://github.com/madebyollin/taesd/) 并将它们放置在 `models/vae_approx` 文件夹中。安装完成后，重新启动 ComfyUI 并使用 `--preview-method taesd` 启用高质量预览。\n\n## 如何使用 TLS/SSL?\n通过运行命令 `openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj \"/C=XX/ST=StateName/L=CityName/O=CompanyName/OU=CompanySectionName/CN=CommonNameOrHostname\"` 生成自签名证书（不适用于共享/生产使用）和密钥。\n\n使用 `--tls-keyfile key.pem --tls-certfile cert.pem` 启用 TLS/SSL，应用程序现在可以通过 `https://...` 而不是 `http://...` 访问。\n\n> 注意：Windows 用户可以使用 [alexisrolland/docker-openssl](https://github.com/alexisrolland/docker-openssl) 或 [第三方二进制分发](https://wiki.openssl.org/index.php/Binaries) 来运行上面的命令示例。 \n<br/><br/>如果您使用容器，请注意卷挂载 `-v` 可以是相对路径，所以 `... -v \".\\:/openssl-certs\" ...` 会创建密钥和 cert 文件在您的命令提示符或 powershell 终端当前目录。\n\n# 支持 和 开发频道\n\n[Discord](https://comfy.org/discord): 尝试 #help 或 #feedback 频道。\n\n[Matrix 空间: #comfyui_space:matrix.org](https://app.element.io/#/room/%23comfyui_space%3Amatrix.org)（它类似于 Discord，但开源）。\n\n另请参阅：[https://www.comfy.org/](https://www.comfy.org/)\n\n## 前端开发\n\n截至 2024 年 8 月 15 日，我们已经过渡到新的前端，它现在托管在一个单独的存储库中：[ComfyUI Frontend](https://github.com/Comfy-Org/ComfyUI_frontend)。此存储库现在托管在 `web/` 目录下的编译 JS（来自 TS/Vue）。\n\n### 报告问题 和 请求功能\n\n对于与前端相关的任何错误、问题或功能请求，请使用 [ComfyUI Frontend 存储库](https://github.com/Comfy-Org/ComfyUI_frontend)。这将帮助我们更有效地管理和解决前端特定的问题。\n\n### 使用最新前端\n\n新的前端现在是 ComfyUI 的默认选项。但是请注意：\n\n1. 主 ComfyUI 存储库中的前端每两周更新一次。\n2. 每日发布可在单独的前端存储库中找到。\n\n要使用最新前端版本：\n\n1. 对于最新每日发布，使用此命令行参数启动 ComfyUI：\n\n   ```\n   --front-end-version Comfy-Org/ComfyUI_frontend@latest\n   ```\n\n2. 对于特定版本，将 `latest` 替换为所需的版本号：\n\n   ```\n   --front-end-version Comfy-Org/CompyUI_frontend@1.2.2\n   ```\n\n这种方法允许您轻松切换稳定的每两周发布和尖端每日更新，甚至特定版本用于测试目的。\n\n### 访问旧版前端\n\n如果您有任何原因需要使用旧版前端，您可以使用以下命令行参数访问它：\n\n```\n--front-end-version Comfy-Org/ComfyUI_legacy_frontend@latest\n```\n\n这将使用 [ComfyUI 旧版前端存储库](https://github.com/Comfy-Org/ComfyUI_legacy_frontend) 保留的旧版前端快照。\n\n# 常见问题解答\n\n### 我应该购买哪种 GPU？\n\n[查看此页面以获取一些建议](https://github.com/comfyanonymous/ComfyUI/wiki/Which-GPU-should-I-buy-for-ComfyUI)\n\n\n<div align=\"center\">\n\n# ComfyUI\n**最强大且模块化的视觉AI引擎和应用程序。**\n\n\n[![网站][website-shield]][website-url]\n[![动态JSON徽章][discord-shield]][discord-url]\n[![推特][twitter-shield]][twitter-url]\n[![矩阵][matrix-shield]][matrix-url]\n<br>\n[![][github-release-shield]][github-release-link]\n[![][github-release-date-shield]][github-release-link]\n[![][github-downloads-shield]][github-downloads-link]\n[![][github-downloads-latest-shield]][github-downloads-link]\n\n[matrix-shield]: https://img.shields.io/badge/Matrix-000000?style=flat&logo=matrix&logoColor=white\n[matrix-url]: https://app.element.io/#/room/%23comfyui_space%3Amatrix.org\n[website-shield]: https://img.shields.io/badge/ComfyOrg-4285F4?style=flat\n[website-url]: https://www.comfy.org/\n<!-- Workaround to display total user from https://github.com/badges/shields/issues/4500#issuecomment-2060079995 -->\n[discord-shield]: https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Fcomfyorg%3Fwith_counts%3Dtrue&query=%24.approximate_member_count&logo=discord&logoColor=white&label=Discord&color=green&suffix=%20total\n[discord-url]: https://www.comfy.org/discord\n[twitter-shield]: https://img.shields.io/twitter/follow/ComfyUI\n[twitter-url]: https://x.com/ComfyUI\n\n[github-release-shield]: https://img.shields.io/github/v/release/comfyanonymous/ComfyUI?style=flat&sort=semver\n[github-release-link]: https://github.com/comfyanonymous/ComfyUI/releases\n[github-release-date-shield]: https://img.shields.io/github/release-date/comfyanonymous/ComfyUI?style=flat\n[github-downloads-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/total?style=flat\n[github-downloads-latest-shield]: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/latest/total?style=flat&label=downloads%40latest\n[github-downloads-link]: https://github.com/comfyanonymous/ComfyUI/releases\n\n![ComfyUI 截图](https://zenly.oss-cn-hangzhou.aliyuncs.com/mcp/repos/comfyanonymous/ComfyUI/readme-images/1751639862493.png)\n</div>\n\nComfyUI 让您能够使用基于图形/节点/流程图的界面设计和执行高级稳定扩散管道。可在 Windows、Linux 和 macOS 上使用。\n\n## 入门指南\n\n#### [桌面应用程序](https://www.comfy.org/download)\n- 最简单的方式开始使用。\n- 可在 Windows & macOS 上使用。\n\n#### [Windows 可移植包](#installing)\n- 获取最新提交并完全可移植。\n- 可在 Windows 上使用。\n\n#### [手动安装](#manual-install-windows-linux)\n支持所有操作系统和 GPU 类型（NVIDIA、AMD、Intel、Apple Silicon、Ascend）。\n\n## [示例](https://comfyanonymous.github.io/ComfyUI_examples/)\n查看 ComfyUI 能做什么，以及 [示例工作流](https://comfyanonymous.github.io/ComfyUI_examples/)。\n\n## 功能\n- 节点/图形/流程图界面，无需编写任何代码即可实验和创建复杂的 Stable Diffusion 工作流。\n- 图像模型\n   - SD1.x, SD2.x,\n   - [SDXL](https://comfyanonymous.github.io/ComfyUI_examples/sdxl/), [SDXL Turbo](https://comfyanonymous.github.io/ComfyUI_examples/sdturbo/)\n   - [稳定级联](https://comfyanonymous.github.io/ComfyUI_examples/stable_cascade/)\n   - [SD3 和 SD3.5](https://comfyanonymous.github.io/ComfyUI_examples/sd3/)\n   - Pixart Alpha 和 Sigma\n   - [AuraFlow](https://comfyanonymous.github.io/ComfyUI_examples/aura_flow/)\n   - [HunyuanDiT](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_dit/)\n   - [Flux](https://comfyanonymous.github.io/ComfyUI_examples/flux/)\n   - [Lumina Image 2.0](https://comfyanonymous.github.io/ComfyUI_examples/lumina2/)\n   - [HiDream](https://comfyanonymous.github.io/ComfyUI_examples/hidream/)\n   - [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n- 图像编辑模型\n   - [Omnigen 2](https://comfyanonymous.github.io/ComfyUI_examples/omnigen/)\n   - [Flux Kontext](https://comfyanonymous.github.io/ComfyUI_examples/flux/#flux-kontext-image-editing-model)\n- 视频模型\n   - [稳定视频扩散](https://comfyanonymous.github.io/ComfyUI_examples/video/)\n   - [Mochi](https://comfyanonymous.github.io/ComfyUI_examples/mochi/)\n   - [LTX-Video](https://comfyanonymous.github.io/ComfyUI_examples/ltxv/)\n   - [Hunyuan 视频](https://comfyanonymous.github.io/ComfyUI_examples/hunyuan_video/)\n   - [Nvidia Cosmos](https://comfyanonymous.github.io/ComfyUI_examples/cosmos/) 和 [Cosmos Predict2](https://comfyanonymous.github.io/ComfyUI_examples/cosmos_predict2/)\n   - [Wan 2.1](https://comfyanonymous.github.io/ComfyUI_examples/wan/)\n- 音频模型\n   - [稳定音频](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n   - [ACE Step](https://comfyanonymous.github.io/ComfyUI_examples/audio/)\n- 3D 模型\n   - [Hunyuan3D 2.0](https://docs.comfy.org/tutorials/3d/hunyuan3D-2)\n- 异步队列系统\n- 许多优化：仅重新执行工作流中在执行之间发生变化的部分。\n- 智能内存管理：可以自动在显存低至 1GB 的 GPU 上运行模型。\n- 即使没有支持 GPU 的用户也可以工作：```--cpu```（速度慢）\n- 可以加载 ckpt、safetensors 和 diffusers 模型/检查点。独立的 VAE 和 CLIP 模型。\n- 安全加载 ckpt、pt、pth 等文件。\n- 嵌入/文本反转\n- [Loras (常规、locon 和 loha)](https://comfyanonymous.github.io/ComfyUI_examples/lora/)\n- [超网络](https://comfyanonymous.github.io/ComfyUI_examples/hypernetworks/)\n- 从生成的 PNG、WebP 和 FLAC 文件中加载完整工作流（包括种子）。\n- 将工作流作为 Json 文件保存/加载。\n- 节点界面可用于创建复杂工作流，例如用于 [高分辨率修复](https://comfyanonymous.github.io/ComfyUI_examples/2_pass_txt2img/) 或更高级的工作流。\n- [区域合成](https://comfyanonymous.github.io/ComfyUI_examples/area_composition/)\n- [修复](https://comfyanonymous.github.io/ComfyUI_examples/inpaint/)，支持常规和修复模型。\n- [ControlNet 和 T2I-Adapter](https://comfyanonymous.github.io/ComfyUI_examples/controlnet/)\n- [提升模型 (ESRGAN、ESRGAN 变体、SwinIR、Swin2SR 等...)](https://comfyanonymous.github.io/ComfyUI_examples/upscale_models/)\n- [unCLIP 模型](https://comfyanonymous.github.io/ComfyUI_examples/unclip/)\n- [GLIGEN](https://comfyanonymous.github.io/ComfyUI_examples/gligen/)\n- [模型合并](https://comfyanonymous.github.io/ComfyUI_examples/model_merging/)\n- [LCM 模型和 Loras](https://comfyanonymous.github.io/ComfyUI_examples/lcm/)\n- 使用 [TAESD](#how-to-show-high-quality-previews)",
    "latest_release_name": "v0.3.43",
    "latest_release_tag_name": "v0.3.43",
    "latest_release_published_at": "2025-06-27T21:41:42.000Z",
    "latest_release_url": "https://github.com/comfyanonymous/ComfyUI/releases/tag/v0.3.43",
    "latest_release_description": "## What's Changed\r\n* Add Flux Kontext and Omnigen 2 models to readme. by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8682\r\n* Don't add tiny bit of random noise when VAE encoding. by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8705\r\n* Fix memory estimation bug with kontext. by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8709\r\n\r\n\r\n**Full Changelog**: https://github.com/comfyanonymous/ComfyUI/compare/v0.3.42...v0.3.43",
    "latest_release_description_zh": "## 有哪些变更\n* 向readme中添加Flux Kontext和Omnigen 2模型。by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8682\n* VAE编码时不再添加微小随机噪声。by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8705\n* 修复与kontext相关的内存估算错误。by @comfyanonymous in https://github.com/comfyanonymous/ComfyUI/pull/8709\n\n\n**完整变更日志**: https://github.com/comfyanonymous/ComfyUI/compare/v0.3.42...v0.3.43",
    "processing_status": {
      "icon_processed": false,
      "description_translated": false,
      "readme_translated": false,
      "og_image_processed": false,
      "release_note_translated": false
    },
    "meta": {
      "task_name": "update-github-data",
      "processed_at": "2025-07-05T04:56:27.736Z",
      "processing_time_ms": 6145,
      "success": true
    }
  }
}